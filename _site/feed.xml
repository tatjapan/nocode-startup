<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Nocode startup</title>
    <description>Nocode startupはプログラミングの知識ほぼゼロで、既存のWebサービスを使ってスタートアップのMVPを低コストで作る方法や、副業を手軽かつ簡単にスタートする方法などを紹介するブログです。</description>
    <link>http://localhost:4000/</link>
    <atom:link href="http://localhost:4000/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Fri, 28 Dec 2018 15:41:11 +0900</pubDate>
    <lastBuildDate>Fri, 28 Dec 2018 15:41:11 +0900</lastBuildDate>
    <generator>Jekyll v3.8.5</generator>
    
      <item>
        <title>十分な知識・経験なしにスマホアプリ開発をするのは止めておいたほうが賢明という話</title>
        <description>&lt;p&gt;私があえて統計データ等を掲載して説明するまでもなく、現在ではインターネットビジネスやアプリケーションビジネスにおいて、スマートフォンをはじめとしたモバイルデバイスのプレゼンスが高まっているのは自明のことだろう。&lt;/p&gt;

&lt;p&gt;プログラミング初心者がノリで作ったアプリがスマッシュヒットして、一夜にして世界中からユーザーを獲得して巨額の富を得たという話も決して多くはないが聞くこともある。モバイル市場を制すれば一気に事業をスケールできるため、どの企業もモバイルへの対応に躍起になっている。（中には別にスマホでこんなことしなくてもいいんじゃね？と思えるサービスも無駄にモバイル対応されていたりする。）　　&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;しかし、趣味でアプリ開発をする方はともかく、いくらあなたが優れたビジネスアイディアを思いついたからといって、先のようなレアケースを鵜呑みにして素人同然からスマホアプリ開発がキーとなる事業を興すのは止めたほうが賢明だ。&lt;/strong&gt;以降では私の経験談を踏まえて、素人同然から始めるアプリ開発のハードルが高いかを書いてみた。もし十分な人脈や資金、知識、経験がないままスマホアプリのスタートアップを考えている方は、この投稿をご一読いただきたい。&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;
&lt;h3 id=&quot;事業開発プロセスを歪める程のお金と時間がかかる&quot;&gt;事業開発プロセスを歪める程のお金と時間がかかる&lt;/h3&gt;
&lt;hr /&gt;
&lt;p&gt;リソースの乏しいスタートアップにおいて、特に時間の有効活用にフォーカスして、学習の最大化を重視する”リーンスタートアップ”という事業開発手法がある。この手法は端的に言えば「開発」「測定」「学習」のサイクルを繰り返し、「検証による学び」を通じて事業成功の確度を高めることを目的としたものである。&lt;strong&gt;ゼロからのスタートでスマホアプリを開発すると、このサイクルでいう「開発」に時間とお金を大幅に奪われ、「測定」と「学習」に割くリソースが不足する事態に陥ってしまう。&lt;/strong&gt;以降でなぜ事業開発サイクルを歪めるまでのリソースを消費してしまうのかブレイクダウンしていく。&lt;/p&gt;

&lt;h4 id=&quot;プログラミング言語の学習コストが高い&quot;&gt;プログラミング言語の学習コストが高い&lt;/h4&gt;
&lt;p&gt;もしあなたがiPhoneとAndroidの両方でアプリをリリースしようとした場合、iOSであればSwift、AndroidならJavaやKotlinと、少なくとも2つ以上の言語の学習が必要になる。余程プログラミングに馴れた方でなければ2つの言語を駆使できるようになるには相応の時間がかかるのは明白だ。&lt;/p&gt;

&lt;p&gt;ここまで読んでReact Nattiveでのマルチプラットフォーム開発を思い浮かべた方もいると思うが、React Nativeで開発する際にも、1つの言語で済むものの学習コストはどうしたってかかってしまうし、それ以外の問題が存在する。その問題については後述させていただく。&lt;/p&gt;

&lt;h4 id=&quot;機種によってまちまちの動作環境&quot;&gt;機種によってまちまちの動作環境&lt;/h4&gt;
&lt;p&gt;スマホやタブレットはアプリの動作環境が機種のスペックに依存することが多く、開発の際は画面のアスペクト比（タテヨコ比）をはじめ、OSのバージョン、カメラのスペックや指紋認証機能や決済機能の有無など、ケアしなければならない項目が多数ある。より多くのユーザーを獲得しようとした場合はこれらの項目を踏まえた開発になるため工数長期化は避けられない。また場合によっては実機を購入する等のコストが追加で発生する可能性もある。&lt;/p&gt;

&lt;h4 id=&quot;app-storeとgoogleplayへの登録時審査&quot;&gt;App StoreとGooglePlayへの登録時審査&lt;/h4&gt;
&lt;p&gt;ホームページ開設やファイルアップロードとは異なり、iPhoneアプリならApp Store、AndroidアプリならGooglePlayの審査を通過して初めてあなたのアプリが配信されることとなる。（Androidに関してはGooglePlay非掲載で配信する方法もあるがここでは詳細を割愛させていただく。）&lt;/p&gt;

&lt;p&gt;審査を通過するためには正常に機能することはもちろん、機能以外の項目で基準を満たしていなければならず、アプリの完成度を高めるための開発工数の他、付随する基準に対応のための各種コストがかかってしまう。
これらの対応と審査待ちの間、機能やユーザーの検証（学習と測定）がスタックしてしまうため、時間の有効活用が成功への重要なファクターとなる創業初期ではかなりのリスクを背負うこととなる。&lt;/p&gt;

&lt;p&gt;またiPhoneアプリを配信する場合は、&lt;a href=&quot;https://developer.apple.com/support/compare-memberships/&quot; target=&quot;_blank&quot;&gt;個人としての登録で毎年99USドル&lt;/a&gt;の登録料支払いが必要となる。Androidの場合は&lt;a href=&quot;https://support.google.com/googleplay/android-developer/answer/6112435?hl=ja&quot; target=&quot;_blank&quot;&gt;初回登録時にのみ25USドル&lt;/a&gt;が必要となるためこれらの費用負担も考慮しなければならない。&lt;/p&gt;

&lt;h4 id=&quot;react-nativeだってローコストローリスクとは言い切れない&quot;&gt;React Nativeだってローコスト・ローリスクとは言い切れない&lt;/h4&gt;

&lt;p&gt;前項で挙げたReact Nativeだが、確かにJavaScriptを押さえておけばiOSでもAndroidでも起動するアプリが開発できるという意味では魅力的な選択肢である。しかしReact Native自体比較的新しいフレームワークであり、実務運用のベストプラクティスに関する情報を得るのが難しい。　&lt;/p&gt;

&lt;p&gt;加えてライブラリによってはOSとの相性が合わずに動作しないということもままあるため、本来予定していた機能が実装できないというリスクも十分にあり得る。&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;一度離れたユーザーを呼び戻すのが困難&quot;&gt;一度離れたユーザーを呼び戻すのが困難&lt;/h3&gt;
&lt;hr /&gt;
&lt;p&gt;これがアプリビジネスの最も恐ろしいリスクになるのだが、&lt;strong&gt;特にサービスローンチの段階で、UXを損なう欠点や欠陥があってユーザーが期待していた価値が提供されなかった場合、あなたのアプリは容量を食うだけのゴミアプリと見なされ、スマホ上から削除された挙句、二度と使われることはないだろう。&lt;/strong&gt;さらに低評価のレビューがストア内を駆け回り、他のユーザーも離れていくという追い打ちも食らいかねない。&lt;/p&gt;

&lt;p&gt;不幸にも初動でつまづいてネガティブなイメージが付いてしまうと、よっぽどアプリの質を向上させない限りは再びダウンロードに向かわせるのは至難の業である。そのため万全なサービスローンチに向けて時間とコストを掛けざるを得ないのが実情だ。　　&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;
&lt;h3 id=&quot;可能ならまずはブラウザで動くwebアプリ開発から&quot;&gt;可能ならまずはブラウザで動くWebアプリ開発から&lt;/h3&gt;
&lt;hr /&gt;
&lt;p&gt;どうしても必要に迫られてアプリを開発しなければならない方には、&lt;strong&gt;まずはブラウザで動くWebアプリを開発することをオススメする。&lt;/strong&gt;確かにスマホ特有の顔認証などの機能を実装させることは難しくなるが、もしそのような機能が不要な場合、ブラウザで動くWebアプリならば機種やOSの互換性も考える必要もなければアプリの審査もない。HTMLやPHP、Rubyといった古くから存在する言語で開発する場合は文献やケーススタディーが豊富なので機能実装も容易だし、バグやエラーを改修した後の動作検証が素早くできる。&lt;strong&gt;つまりローコストでビジネスのPDCAが回しやすいのである。&lt;/strong&gt;　　&lt;/p&gt;

&lt;p&gt;加えて、Webアプリならば&lt;strong&gt;別途アプリをダウンロードする必要はないので、スマホの容量を気にする必要がなくなり、ユーザーの利用や登録へのストレスや心理的ハードルが下がる効果が期待できる。&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;これはやや余談だが、Webアプリのデータベースを後からスマホアプリへ統合することも技術的に可能だ。まずはブラウザで動くアプリをしっかり作ってユーザーを獲得した後にスマホアプリを開発するというスタンスを一つの選択肢として検討してみて欲しい。&lt;/p&gt;
</description>
        <pubDate>Fri, 28 Dec 2018 00:00:00 +0900</pubDate>
        <link>http://localhost:4000/%E3%82%B9%E3%83%9E%E3%83%9B/%E3%82%A2%E3%83%97%E3%83%AA/%E6%95%99%E8%A8%93/%E9%9B%91%E8%AB%87/%E9%96%8B%E7%99%BA/2018/12/28/you-should-stop-developing-mobile-app-with-no-skill-set.html</link>
        <guid isPermaLink="true">http://localhost:4000/%E3%82%B9%E3%83%9E%E3%83%9B/%E3%82%A2%E3%83%97%E3%83%AA/%E6%95%99%E8%A8%93/%E9%9B%91%E8%AB%87/%E9%96%8B%E7%99%BA/2018/12/28/you-should-stop-developing-mobile-app-with-no-skill-set.html</guid>
        
        
        <category>スマホ</category>
        
        <category>アプリ</category>
        
        <category>教訓</category>
        
        <category>雑談</category>
        
        <category>開発</category>
        
      </item>
    
      <item>
        <title>Nocode startupというブログタイトルにも関わらず自己矛盾を抱えてブログを自作した経緯</title>
        <description>&lt;p&gt;はてなブログや、アメブロ、note、Medium等、単にブログ始めるだけなら自作せずとも、無料で利用できて誰でもかっこいいブログが開設できる素晴らしいサービスが今の世の中にはごまんとある。その気になればFacebookやTwitterのようなSNSもブログのように使うことができる。　　&lt;/p&gt;

&lt;p&gt;コーディングやSEO対策等煩わしいので、これらを利用して情報発信することも前向きに考えた。むしろ当初はてなブログを利用しようとnocode-startupのアカウントまで取得していた。　　&lt;/p&gt;

&lt;p&gt;記念すべき第1回目の投稿は、&lt;a href=&quot;https://www.nocode-startup.com/about&quot; target=&quot;_blank&quot;&gt;Aboutページ&lt;/a&gt; で”究極的にはコードを書かないのが一番だ”とか言っておきながら、なぜNocodeというポリシーに反して既存サービスの利用を見送り、このブログを自作するに至ったのかについて記していきたい。　　&lt;/p&gt;

&lt;h3 id=&quot;知識のさらなる活用術を模索したい&quot;&gt;知識のさらなる活用術を模索したい&lt;/h3&gt;
&lt;hr /&gt;
&lt;p&gt;全くもって身も蓋もなく非合理的ではあるが、要するに知的好奇心が一番の理由だ。&lt;/p&gt;

&lt;p&gt;自分の知識を資産とするなら、Webアプリ開発で得た諸々の知識をRailsにしか使わないのはROAが低く、レバレッジが効いているとは言えないだろう。&lt;/p&gt;

&lt;p&gt;せっかくそれなりの手間をかけて得た知識であるならば、もっとフル活用してRails以外にも色々できるようになった方が広がりがあって楽しいと個人的には思った次第だ。&lt;/p&gt;

&lt;h3 id=&quot;利用規約を気にせず自分の好きなように情報発信したい&quot;&gt;利用規約を気にせず自分の好きなように情報発信したい&lt;/h3&gt;
&lt;hr /&gt;
&lt;p&gt;今後際どい過激な文章を発信するつもりは毛頭ないが、既存のブログサービスでは些細な内容でも規約に引っかかり、十分な説明もないまま記事が削除されることもある。そういった突然記事を削除された時のストレスに加えて何でも自分でやってみたい性分もあり、結局自作がベストであろうという結論になった。&lt;/p&gt;

&lt;p&gt;もちろんやるからには炎上（するのかな？）などのネガティブな反応も含め、全てにおいて自身の裁量と責任の元でこれから情報発信していきたい。&lt;/p&gt;

&lt;h3 id=&quot;rails--heroku以外の安上がりなサイト公開方法が知りたかった&quot;&gt;Rails + Heroku以外の安上がりなサイト公開方法が知りたかった&lt;/h3&gt;
&lt;hr /&gt;
&lt;p&gt;以前からなるべく年間1,000円程度のドメイン代のみで簡単にそれなりの独自サイトを構築する方法を探していた。&lt;br /&gt;
ちなみにこれまでに開発したWebアプリはRails + Herokuの組み合わせで独自ドメイン代+Heroku月額使用料（無料利用できるが独自ドメイン使用の場合は有料）+その他API月額使用料がかかっていた。&lt;/p&gt;

&lt;p&gt;重要なプロジェクトであれば上記の費用は必要経費として止む無しと受け入れることができるし、開発に時間とコストをかけるのも納得ができる。しかし今回の一サイドプロジェクトのブログのためにRailsを使うのはやや過剰だし、WordPressもメンテナンスが面倒だから嫌い（笑）。加えて出来ることならお金をかけてサーバーを借りたり、PaaSの有料プランを契約したくないといった駄々をこねる子供のような思考が巡っていたところ、ちょうど知り合いのShunさんがブログで&lt;a href=&quot;https://workabroad.jp/posts/2225&quot; target=&quot;_blank&quot;&gt;高速でメンテナンスが簡単な静的サイトを作る方法&lt;/a&gt;を公開していて、内容が正に私の求めるものだったので渡りに船と言わんばかりに真似をすることに決めた。&lt;/p&gt;
&lt;h3 id=&quot;サイト構築と公開&quot;&gt;サイト構築と公開&lt;/h3&gt;
&lt;hr /&gt;
&lt;p&gt;私の場合、お名前.comのタイムセールで年間500円+消費税で取得した。もちろん他のサイトでドメインを取得しても問題ない。&lt;br /&gt;
その他は全て無料で以下のサービスを利用した。ここでは各種サービスのインストール方法や設定方法を順を追って説明していきたい。&lt;/p&gt;

&lt;h4 id=&quot;jekyll&quot;&gt;Jekyll&lt;/h4&gt;
&lt;p&gt;静的サイトジェネレーター&lt;br /&gt;
&lt;a href=&quot;https://jekyllrb.com/&quot; target=&quot;_blank&quot;&gt;https://jekyllrb.com/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Macユーザーの方や、一度でもRubyやRailsの開発環境を構築された方なら以下のコマンドを叩けば即利用可。そうでない方は&lt;a href=&quot;https://www.sejuku.net/blog/3958#Ruby-3&quot; target=&quot;_blank&quot;&gt;こちら&lt;/a&gt;を参照いただきRubyをインストールする必要あり。&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;# Jekyllインストール&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;gem&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;install&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;jekyll&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;bundler&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;# 例としてmyblogというタイトルのサイトを作成&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;jekyll&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;myblog&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;# ディレクトリの変更&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;cd&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;myblog&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;# 動作確認 http://localhost:4000&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;jekyll&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;serve&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;h4 id=&quot;jekyll-themes&quot;&gt;Jekyll Themes&lt;/h4&gt;
&lt;p&gt;ブログテンプレートを多数公開しているサイト&lt;br /&gt;
&lt;a href=&quot;http://jekyllthemes.org/&quot; target=&quot;_blank&quot;&gt;http://jekyllthemes.org/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;コーディングが面倒な方はここからお好みのものを選んで使えばOK。ただし使用時のライセンスには注意が必要。&lt;/p&gt;

&lt;h4 id=&quot;github&quot;&gt;Github&lt;/h4&gt;
&lt;p&gt;ここにレポジトリを作って、公開したいサイトのJekyllソースコードをpushしましょう。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-git&quot;&gt;$ git init
$ git add .
$ git commit -m &quot;Initial commit&quot;
$ git remote add origin my-github-repository-url
$ git push -u origin master
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&quot;netlify&quot;&gt;Netlify&lt;/h4&gt;
&lt;p&gt;無料で利用できるホスティングサービス&lt;br /&gt;
&lt;a href=&quot;https://www.netlify.com&quot; target=&quot;_blank&quot;&gt;https://www.netlify.com&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;しかも独自ドメインの設定とサイトの常時SSL接続（https）が無料！！💗&lt;/p&gt;

&lt;p&gt;まずはSign Upから無料登録（メールアドレスでの登録の他、Githubアカウントの認証可能。）&lt;br /&gt;
アカウントを作成したら、Continuous Developmentの項目で、ソースコードをpushしたGithubレポジトリを選択。&lt;br /&gt;
これでpushされる都度、内容が自動更新されるようになる。
&lt;img src=&quot;/assets/images/create_new_site.jpg&quot; alt=&quot;create_new_site&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;
次に各自ドメインを購入したサイトの設定方法でDNSをNetlifyに設定する。
&lt;img src=&quot;/assets/images/cname.jpg&quot; alt=&quot;cname&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;
最後にDomain Settingから購入したドメインを設定したら完了。私の場合だいたい5分くらいで独自ドメインが適用された。
&lt;img src=&quot;/assets/images/custom_domain.jpg&quot; alt=&quot;custom_domain&quot; /&gt;&lt;/p&gt;

&lt;h2&gt;&lt;br /&gt;&lt;/h2&gt;
&lt;p&gt;以上。私はデザインテンプレートを使ったので、作成から公開まで30分くらいでできた！&lt;br /&gt;
爆速！！！&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;
&lt;h3 id=&quot;参考&quot;&gt;参考&lt;/h3&gt;
&lt;hr /&gt;
&lt;p&gt;Jekyll + Netlify + Cloudinary で高速なウェブサイトを無料で公開する&lt;br /&gt;
&lt;a href=&quot;https://workabroad.jp/posts/2225&quot; target=&quot;_blank&quot;&gt;https://workabroad.jp/posts/2225&lt;/a&gt;&lt;/p&gt;
</description>
        <pubDate>Fri, 28 Dec 2018 00:00:00 +0900</pubDate>
        <link>http://localhost:4000/jekyll/netlify/%E3%83%97%E3%83%AD%E3%82%B0%E3%83%A9%E3%83%9F%E3%83%B3%E3%82%B0/%E9%9B%91%E8%AB%87/2018/12/28/why-I-made-this-blog-with-jekyll.html</link>
        <guid isPermaLink="true">http://localhost:4000/jekyll/netlify/%E3%83%97%E3%83%AD%E3%82%B0%E3%83%A9%E3%83%9F%E3%83%B3%E3%82%B0/%E9%9B%91%E8%AB%87/2018/12/28/why-I-made-this-blog-with-jekyll.html</guid>
        
        
        <category>Jekyll</category>
        
        <category>Netlify</category>
        
        <category>プログラミング</category>
        
        <category>雑談</category>
        
      </item>
    
  </channel>
</rss>
